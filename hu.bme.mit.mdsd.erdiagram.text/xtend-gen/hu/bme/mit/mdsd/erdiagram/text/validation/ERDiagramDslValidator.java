/**
 * generated by Xtext 2.9.1
 */
package hu.bme.mit.mdsd.erdiagram.text.validation;

import hu.bme.mit.mdsd.erdiagram.text.eRDiagramDsl.ERDiagramDslPackage;
import hu.bme.mit.mdsd.erdiagram.text.eRDiagramDsl.Entity;
import hu.bme.mit.mdsd.erdiagram.text.validation.AbstractERDiagramDslValidator;
import java.util.HashSet;
import java.util.Set;
import org.eclipse.emf.common.util.EList;
import org.eclipse.xtext.validation.Check;

/**
 * This class contains custom validation rules.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
@SuppressWarnings("all")
public class ERDiagramDslValidator extends AbstractERDiagramDslValidator {
  private Set<Entity> entitiesAlreadyChecked = new HashSet<Entity>();
  
  @Check
  public void checkCyclicInheritance(final Entity entity) {
    this.checkCyclicInheritance2(entity);
    this.entitiesAlreadyChecked.clear();
  }
  
  public void checkCyclicInheritance2(final Entity entity) {
    this.entitiesAlreadyChecked.add(entity);
    EList<Entity> _isA = entity.getIsA();
    for (final Entity parent : _isA) {
      {
        boolean _contains = this.entitiesAlreadyChecked.contains(parent);
        if (_contains) {
          this.error("Cyclic reference is not allowed.", ERDiagramDslPackage.Literals.ENTITY__IS_A);
          return;
        }
        this.checkCyclicInheritance2(parent);
      }
    }
  }
}
