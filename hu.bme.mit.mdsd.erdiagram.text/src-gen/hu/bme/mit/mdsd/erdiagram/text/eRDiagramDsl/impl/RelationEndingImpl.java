/**
 * generated by Xtext 2.9.1
 */
package hu.bme.mit.mdsd.erdiagram.text.eRDiagramDsl.impl;

import hu.bme.mit.mdsd.erdiagram.text.eRDiagramDsl.ERDiagramDslPackage;
import hu.bme.mit.mdsd.erdiagram.text.eRDiagramDsl.Entity;
import hu.bme.mit.mdsd.erdiagram.text.eRDiagramDsl.MultiplicityType;
import hu.bme.mit.mdsd.erdiagram.text.eRDiagramDsl.RelationEnding;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Relation Ending</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link hu.bme.mit.mdsd.erdiagram.text.eRDiagramDsl.impl.RelationEndingImpl#getMultiplicity <em>Multiplicity</em>}</li>
 *   <li>{@link hu.bme.mit.mdsd.erdiagram.text.eRDiagramDsl.impl.RelationEndingImpl#isNullable <em>Nullable</em>}</li>
 *   <li>{@link hu.bme.mit.mdsd.erdiagram.text.eRDiagramDsl.impl.RelationEndingImpl#getTarget <em>Target</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RelationEndingImpl extends MinimalEObjectImpl.Container implements RelationEnding
{
  /**
   * The default value of the '{@link #getMultiplicity() <em>Multiplicity</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMultiplicity()
   * @generated
   * @ordered
   */
  protected static final MultiplicityType MULTIPLICITY_EDEFAULT = MultiplicityType.ONE;

  /**
   * The cached value of the '{@link #getMultiplicity() <em>Multiplicity</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMultiplicity()
   * @generated
   * @ordered
   */
  protected MultiplicityType multiplicity = MULTIPLICITY_EDEFAULT;

  /**
   * The default value of the '{@link #isNullable() <em>Nullable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNullable()
   * @generated
   * @ordered
   */
  protected static final boolean NULLABLE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isNullable() <em>Nullable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNullable()
   * @generated
   * @ordered
   */
  protected boolean nullable = NULLABLE_EDEFAULT;

  /**
   * The cached value of the '{@link #getTarget() <em>Target</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTarget()
   * @generated
   * @ordered
   */
  protected Entity target;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RelationEndingImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ERDiagramDslPackage.Literals.RELATION_ENDING;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MultiplicityType getMultiplicity()
  {
    return multiplicity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMultiplicity(MultiplicityType newMultiplicity)
  {
    MultiplicityType oldMultiplicity = multiplicity;
    multiplicity = newMultiplicity == null ? MULTIPLICITY_EDEFAULT : newMultiplicity;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ERDiagramDslPackage.RELATION_ENDING__MULTIPLICITY, oldMultiplicity, multiplicity));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isNullable()
  {
    return nullable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNullable(boolean newNullable)
  {
    boolean oldNullable = nullable;
    nullable = newNullable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ERDiagramDslPackage.RELATION_ENDING__NULLABLE, oldNullable, nullable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Entity getTarget()
  {
    if (target != null && target.eIsProxy())
    {
      InternalEObject oldTarget = (InternalEObject)target;
      target = (Entity)eResolveProxy(oldTarget);
      if (target != oldTarget)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ERDiagramDslPackage.RELATION_ENDING__TARGET, oldTarget, target));
      }
    }
    return target;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Entity basicGetTarget()
  {
    return target;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTarget(Entity newTarget)
  {
    Entity oldTarget = target;
    target = newTarget;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ERDiagramDslPackage.RELATION_ENDING__TARGET, oldTarget, target));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ERDiagramDslPackage.RELATION_ENDING__MULTIPLICITY:
        return getMultiplicity();
      case ERDiagramDslPackage.RELATION_ENDING__NULLABLE:
        return isNullable();
      case ERDiagramDslPackage.RELATION_ENDING__TARGET:
        if (resolve) return getTarget();
        return basicGetTarget();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ERDiagramDslPackage.RELATION_ENDING__MULTIPLICITY:
        setMultiplicity((MultiplicityType)newValue);
        return;
      case ERDiagramDslPackage.RELATION_ENDING__NULLABLE:
        setNullable((Boolean)newValue);
        return;
      case ERDiagramDslPackage.RELATION_ENDING__TARGET:
        setTarget((Entity)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ERDiagramDslPackage.RELATION_ENDING__MULTIPLICITY:
        setMultiplicity(MULTIPLICITY_EDEFAULT);
        return;
      case ERDiagramDslPackage.RELATION_ENDING__NULLABLE:
        setNullable(NULLABLE_EDEFAULT);
        return;
      case ERDiagramDslPackage.RELATION_ENDING__TARGET:
        setTarget((Entity)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ERDiagramDslPackage.RELATION_ENDING__MULTIPLICITY:
        return multiplicity != MULTIPLICITY_EDEFAULT;
      case ERDiagramDslPackage.RELATION_ENDING__NULLABLE:
        return nullable != NULLABLE_EDEFAULT;
      case ERDiagramDslPackage.RELATION_ENDING__TARGET:
        return target != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (multiplicity: ");
    result.append(multiplicity);
    result.append(", nullable: ");
    result.append(nullable);
    result.append(')');
    return result.toString();
  }

} //RelationEndingImpl
