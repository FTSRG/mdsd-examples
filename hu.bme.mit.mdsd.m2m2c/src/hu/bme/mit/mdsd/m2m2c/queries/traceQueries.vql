package hu.bme.mit.mdsd.m2m2c.queries

import "http://mit.bme.hu/mdsd/erdiagram" as erdiagram
import "hu.bme.mit.mdsd.trace"
import "hu.bme.mit.mdsd.rdb" as rdb

// U = Update, D = Delete, C = Create

/////////////////////////////////////// Entity //////////////////////////////////////////

pattern entity_C(entity: Entity){
	neg find treaceOfElement(_, _, entity, _);
}

pattern entity_UD(entity : Entity, trace: Trace, table: Table){
	find treaceOfElement(_, trace, entity, table);
}

/////////////////////////////////////// Attribute ///////////////////////////////////////

pattern attribute_C(entity: Entity, superEntity: Entity, attribute : Attribute, trace: Trace, table: Table){
	find treaceOfElement(_, trace, entity, table);
	find entityAttribute(superEntity, attribute);
	find allSuperEntity(entity, superEntity);
	neg find tracedAttributeOfTable(attribute, table);
}

pattern attribute_U(attribute : Attribute, trace: Trace, column: Column){
	find treaceOfElement(_, trace, attribute, column);
}

pattern attribute_D(entity: Entity, attribute : Attribute, trace: Trace, table: Table){
	find treaceOfElement(_, trace, entity, table);
	find entityAttribute(superEntity, attribute);
	find allSuperEntity(entity, superEntity);
	find treaceOfElement(_, _, attribute, column);
	Table.columns(table, column);
}

/////////////////////////////////////// Relation ////////////////////////////////////////

pattern relation_C(relation: Relation, 
	relationEndingLeft: RelationEnding, 
	relationEndingRight: RelationEnding,
	entityLeft: Entity,
	entityRight: Entity,
	tableLeft: Table,
	tableRight: Table
){
	find relation(relation, relationEndingLeft, relationEndingRight, entityLeft, entityRight, tableLeft, tableRight);
	neg find treaceOfElement(_, _, relation, _);
}

pattern relation_D(relation: Relation, 
	relationEndingLeft: RelationEnding, 
	relationEndingRight: RelationEnding,
	entityLeft: Entity,
	entityRight: Entity,
	tableLeft: Table,
	tableRight: Table,
	trace: Trace,
	switchTable: Table
){
	find relation(relation, relationEndingLeft, relationEndingRight, entityLeft, entityRight, tableLeft, tableRight);	
	find treaceOfElement(_, trace, relation, switchTable);
}

pattern relation_U(relation: Relation, switchTable: Table){
	find treaceOfElement(_, _, relation, switchTable);
}


